#!/bin/bash
#
# @file monitor
# â˜†  Script that talks with the Arduino GrblShield providing a monitor feature
#    ala the Arduino Serial Monitor Tool. A jog mode is also provided to move
#    the X, Y, Z axis using keystrokes of the keyboard.
# @author Alister Lewis-Bowen <alister@different.com>
# @requires color <http://code.google.com/p/ansi-color/>
#
# This software is distributed under the the MIT License.
#
# Copyright (c) 2012 Alister Lewis-Bowen
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

#
# Bootstrap
#
LIB=$( cd "$( dirname "$0" )" && pwd )/lib
source $LIB/core       # core vars and functions
source $LIB/connection # connection logic
source $LIB/jog        # jog mode
source $LIB/waypoints  # waypoint manager

function _helpCmd {
    local helpText="
$(color bd)Arduino GrblShield Serial Monitor Tool$(color)

Usage: $(color bd)monitor [$(color ul)options$(color bd)]$(color)

Options:
--clear-device      Delete the stored USB device
--clear-waypoints   Delete any stored waypoints
$(color)
"
    echo "$helpText"
    exit 0;
}

function _helpLoop {
    local helpText="$(color yellow)$(color bd)Arduino GrblShield Serial \
Monitor Tool commands:$(color)
:jog, :j .......... enter jog mode
:homei, :h ........ attempt to move X, Y, Z axis to zero
:limit, ........... record current X, Y, Z co-ords as the maximum limit
:set, :s $(color ul)wp$(color) ... set current X, Y, Z position as a waypoint \
named $(color ul)wp$(color)
:go, :g $(color ul)wp$(color) .... move X, Y, Z position it waypoint named \
$(color ul)wp$(color)
:list, :l ......... list all waypoints
:exit, :e ......... exit from monitor
:commands, :c ..... show commands
$(color)"
    echo "$helpText"
}

case "$1" in
    '-h'|'--help'|'help')   _helpCmd;;
    '--clear-device')       conRemoveStore;;
    '--clear-waypoints')    wpRemoveSore;;
esac

# TODO: Migrate connection control into command loop
conOpen

while true; do

    [ "$MODE" == "$START_UP" ] && _helpLoop # offer some help on start up
    MODE=$RAW                               # default to raw mode

    echo -n "$(color yellow)[monitor] > $(color)"
    read input

    case "$input" in
        ':commands'|':c')   _helpLoop;;
        ':exit'|':e')       conClose;;
        ':jog'|':j')        jogMode;;
        ':home'|':h')       jogHome;;
        ':limit')           wpStoreLimit;;
        ':set'|':s')        wpStore $2;;
        ':go'|':g')         wpGoto $2;;
        ':list'|':l')       wpList;;
        *)  # Process raw input
            conSend "$input"
            echo
            ;;
    esac
done;
